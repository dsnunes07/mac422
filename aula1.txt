* Sistema operacional abstrai rotinas para acesso a recursos e entrega ao desenvolvedor um modelo de computador mais simples e abstrato.
  - abstrair funcionalidades
  - gerenciamento de recursos
    > escalonamento de processos (gerenciar fatia de tempo e espaço para cada processo)
      compartilhar tempo (processador): quando um processo usa o chip, ele usa o chip inteiro por determinado periodo de tempo
      compartilhar espaço (memória): quando um processo usa a memória, ele tem sua fatia da memória fixada. Muito dificil um processo usar a memória inteira.



* Um programa de computador está em seu modo estático se ele está no disco. Ao executar o programa, ele se torna um processo.

* hardware => software { s.o => shell/gui => aplicações }

* O s.o é um software que trabalha em modo kernel. Tem permissão de controle a funcionalidades centrais do hardware.

* Funções executadas no modo kernel são funções relativamente "Perigosas", pois o s.o pode fazer qualquer coisa nesse modo. Ler informações da memória, danificar disco, sobrecarregar processador.
O modo kernel geralmente é executado pelo próprio SO. Estando em modo root, super usuário, etc, o usuário pode operar em modo kernel.

* Sistemas operacionais evoluem de maneira mais lenta em relação a aplicações de usuário.


comando nice: mudar a prioridade do processo